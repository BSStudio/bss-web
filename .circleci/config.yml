version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: docker:20.10.11-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
  test:
    working_directory: ~/project
    docker:
      - image: circleci/node:16-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - run:
          name: Install local dependencies
          command: npm clean-install
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Testing
          command: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI --reporters=junit
      - store_test_results:
          name: Store test results
          path: ~/project/reports
  lint:
    working_directory: ~/project
    docker:
      - image: circleci/node:16-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - run:
          name: Install local dependencies
          command: npm clean-install
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Lint project
          command: npm run lint
workflows:
  version: 2
  build_and_test_and_lint:
    jobs:
      - build
      - test
      - lint
